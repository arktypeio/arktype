{
    "src/__tests__/customValidators.test.ts": [
        {
            "location": {
                "start": {
                    "line": 18,
                    "char": 9
                },
                "end": {
                    "line": 18,
                    "char": 68
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/errors\").ValidationErrors | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 21,
                    "char": 9
                },
                "end": {
                    "line": 21,
                    "char": 69
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/errors\").ValidationErrors | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 30,
                    "char": 9
                },
                "end": {
                    "line": 30,
                    "char": 68
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 33,
                    "char": 9
                },
                "end": {
                    "line": 33,
                    "char": 69
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 48,
                    "char": 9
                },
                "end": {
                    "line": 48,
                    "char": 69
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 51,
                    "char": 9
                },
                "end": {
                    "line": 51,
                    "char": 69
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 69,
                    "char": 9
                },
                "end": {
                    "line": 69,
                    "char": 55
                }
            },
            "type": {
                "actual": "() => void"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 72,
                    "char": 9
                },
                "end": {
                    "line": 76,
                    "char": 10
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 100,
                    "char": 9
                },
                "end": {
                    "line": 100,
                    "char": 41
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 101,
                    "char": 9
                },
                "end": {
                    "line": 101,
                    "char": 49
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        }
    ],
    "src/__tests__/declaration.test.ts": [
        {
            "location": {
                "start": {
                    "line": 8,
                    "char": 9
                },
                "end": {
                    "line": 11,
                    "char": 10
                }
            },
            "type": {
                "actual": "() => any"
            },
            "errors": "Property 'somethingUndeclared' does not exist on type 'DeclaredDefineFunctionMap<[\"gottaDefineThis\"]>'."
        },
        {
            "location": {
                "start": {
                    "line": 13,
                    "char": 9
                },
                "end": {
                    "line": 13,
                    "char": 55
                }
            },
            "type": {
                "actual": "() => { gottaDefineThis: \"whoops\"; }"
            },
            "errors": "Argument of type '\"whoops\"' is not assignable to parameter of type '\"Error: Unable to determine the type of 'whoops'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 17,
                    "char": 9
                },
                "end": {
                    "line": 17,
                    "char": 54
                }
            },
            "type": {
                "actual": "{ a: boolean; }",
                "expected": "{ a: boolean; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 30,
                    "char": 9
                },
                "end": {
                    "line": 30,
                    "char": 47
                }
            },
            "type": {
                "actual": "() => import(\"/home/ssalb/2re-po/@re-/model/src/space\").Space<{ gottaDefineThis: { a: \"string\"; }; }>"
            },
            "errors": "Argument of type '{ gottaDefineThis: { a: \"string\"; }; }' is not assignable to parameter of type 'CheckDeclaredCompilation<{ gottaDefineThis: { a: \"string\"; }; }, [\"gottaDefineThis\", \"gottaDefineThisToo\"]>'.Property 'gottaDefineThisToo' is missing in type '{ gottaDefineThis: { a: \"string\"; }; }' but required in type 'CheckDeclaredCompilation<{ gottaDefineThis: { a: \"string\"; }; }, [\"gottaDefineThis\", \"gottaDefineThisToo\"]>'."
        },
        {
            "location": {
                "start": {
                    "line": 37,
                    "char": 9
                },
                "end": {
                    "line": 45,
                    "char": 10
                }
            },
            "type": {
                "actual": "() => import(\"/home/ssalb/2re-po/@re-/model/src/space\").Space<{ cantDefineThis: \"boolean\"; wontDefineThis: \"string\"; gottaDefineThis: \"boolean\"; }>"
            },
            "errors": "Type '\"boolean\"' is not assignable to type '\"Invalid property 'cantDefineThis'. Valid properties are: gottaDefineThis\"'.\nType '\"string\"' is not assignable to type '\"Invalid property 'wontDefineThis'. Valid properties are: gottaDefineThis\"'."
        }
    ],
    "src/__tests__/demo.test.ts": [
        {
            "location": {
                "start": {
                    "line": 30,
                    "char": 9
                },
                "end": {
                    "line": 30,
                    "char": 26
                }
            },
            "type": {
                "actual": "{ name: { first: string; last: string; middle?: string | undefined; }; age: number; browser: \"chrome\" | \"firefox\" | \"other\" | null; }",
                "expected": "{ name: { first: string; last: string; middle?: string | undefined; }; age: number; browser: \"chrome\" | \"firefox\" | \"other\" | null; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 39,
                    "char": 9
                },
                "end": {
                    "line": 39,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 60,
                    "char": 9
                },
                "end": {
                    "line": 69,
                    "char": 10
                }
            },
            "type": {
                "actual": "() => void"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 72,
                    "char": 9
                },
                "end": {
                    "line": 72,
                    "char": 33
                }
            },
            "type": {
                "actual": "{ name: string; groups: { title: string; members: { name: string; groups: { title: string; members: any[]; }[]; bestFriend?: any | undefined; }[]; }[]; bestFriend?: { name: string; groups: { title: string; members: { name: string; groups: any[]; bestFriend?: any | undefined; }[]; }[]; bestFriend?: any | undefined; } | undefined; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 100,
                    "char": 9
                },
                "end": {
                    "line": 100,
                    "char": 30
                }
            },
            "type": {
                "actual": "{ email: string; about: { age: number; bio: string; }; }",
                "expected": "{ email: string; about: { age: number; bio: string; }; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 107,
                    "char": 9
                },
                "end": {
                    "line": 107,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        }
    ],
    "src/__tests__/inheritableConfigs.test.ts": [
        {
            "location": {
                "start": {
                    "line": 7,
                    "char": 13
                },
                "end": {
                    "line": 12,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 16,
                    "char": 13
                },
                "end": {
                    "line": 21,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 28,
                    "char": 13
                },
                "end": {
                    "line": 28,
                    "char": 74
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 41,
                    "char": 13
                },
                "end": {
                    "line": 46,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 55,
                    "char": 13
                },
                "end": {
                    "line": 60,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 76,
                    "char": 13
                },
                "end": {
                    "line": 78,
                    "char": 14
                }
            },
            "type": {
                "actual": "{ contents: any; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 80,
                    "char": 13
                },
                "end": {
                    "line": 80,
                    "char": 45
                }
            },
            "type": {
                "actual": "{ contents: any; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 82,
                    "char": 13
                },
                "end": {
                    "line": 82,
                    "char": 63
                }
            },
            "type": {
                "actual": "{ contents: any; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 86,
                    "char": 13
                },
                "end": {
                    "line": 91,
                    "char": 14
                }
            },
            "type": {
                "actual": "{ contents: any; }"
            },
            "errors": ""
        }
    ],
    "src/__tests__/space.test.ts": [
        {
            "location": {
                "start": {
                    "line": 8,
                    "char": 9
                },
                "end": {
                    "line": 8,
                    "char": 49
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 10,
                    "char": 9
                },
                "end": {
                    "line": 10,
                    "char": 46
                }
            },
            "type": {
                "actual": "() => import(\"/home/ssalb/2re-po/@re-/model/src/space\").Space<{ a: \"strig\"; }>"
            },
            "errors": "Type '\"strig\"' is not assignable to type '\"Error: Unable to determine the type of 'strig'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 15,
                    "char": 9
                },
                "end": {
                    "line": 15,
                    "char": 70
                }
            },
            "type": {
                "actual": "{ c: boolean; }",
                "expected": "{ c: boolean; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 18,
                    "char": 9
                },
                "end": {
                    "line": 21,
                    "char": 10
                }
            },
            "type": {
                "actual": "() => import(\"/home/ssalb/2re-po/@re-/model/src/space\").Space<{ a: \"string\"; b: { c: \"uhoh\"; }; }>"
            },
            "errors": "Type '\"uhoh\"' is not assignable to type '\"Error: Unable to determine the type of 'uhoh'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 24,
                    "char": 9
                },
                "end": {
                    "line": 24,
                    "char": 66
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 26,
                    "char": 9
                },
                "end": {
                    "line": 29,
                    "char": 10
                }
            },
            "type": {
                "actual": "() => import(\"/home/ssalb/2re-po/@re-/model/src/space\").Space<{ a: \"yikes\"; b: { c: \"a\"; }; }>"
            },
            "errors": "Type '\"yikes\"' is not assignable to type '\"Error: Unable to determine the type of 'yikes'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 33,
                    "char": 9
                },
                "end": {
                    "line": 35,
                    "char": 10
                }
            },
            "type": {
                "actual": "{ dejaVu?: any | undefined; } | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 40,
                    "char": 9
                },
                "end": {
                    "line": 40,
                    "char": 30
                }
            },
            "type": {
                "actual": "{ b: { a: { b: { a: any; }; }; }; }",
                "expected": "{ b: { a: { b: { a: any; }; }; }; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 50,
                    "char": 9
                },
                "end": {
                    "line": 50,
                    "char": 44
                }
            },
            "type": {
                "actual": "{ b: { a: any; }; }",
                "expected": "{ b: { a: any; }; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 9
                },
                "end": {
                    "line": 56,
                    "char": 38
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": "Property 'c' does not exist on type '{ a: { b: ...; }; }'."
        },
        {
            "location": {
                "start": {
                    "line": 61,
                    "char": 9
                },
                "end": {
                    "line": 61,
                    "char": 66
                }
            },
            "type": {
                "actual": "[{ c: string; }]",
                "expected": "[{ c: string; }]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 69,
                    "char": 9
                },
                "end": {
                    "line": 69,
                    "char": 46
                }
            },
            "type": {
                "actual": "{ b: { a: { b: { a: any; }; }; }; } | { a: { b: { a: { b: any; }; }; }; } | null"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 72,
                    "char": 9
                },
                "end": {
                    "line": 75,
                    "char": 10
                }
            },
            "type": {
                "actual": "() => { definition: { nested: { a: \"a\"; b: \"b\"; c: \"c\"; }; }; type: { nested: { a: { b: { a: { b: any; }; }; }; b: { a: { b: { a: any; }; }; }; c: \"Error: Unable to determine the type of 'c'.\"; }; }; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => { nested: { a: { b: { a: { b: any; }; }; }; b: { a: { b: { a: any; }; }; }; c: \"Error: Unable to determine the type of 'c'.\"; }; }; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Type '\"c\"' is not assignable to type '\"Error: Unable to determine the type of 'c'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 80,
                    "char": 9
                },
                "end": {
                    "line": 80,
                    "char": 23
                }
            },
            "type": {
                "actual": "{ b?: { a?: { b?: any | undefined; } | undefined; } | undefined; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 86,
                    "char": 9
                },
                "end": {
                    "line": 86,
                    "char": 46
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 89,
                    "char": 9
                },
                "end": {
                    "line": 89,
                    "char": 53
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 90,
                    "char": 9
                },
                "end": {
                    "line": 90,
                    "char": 51
                }
            },
            "type": {
                "actual": "() => void"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 91,
                    "char": 9
                },
                "end": {
                    "line": 91,
                    "char": 29
                }
            },
            "type": {
                "actual": "{ b?: { a?: { b?: any | undefined; } | undefined; } | undefined; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 92,
                    "char": 9
                },
                "end": {
                    "line": 92,
                    "char": 31
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 93,
                    "char": 9
                },
                "end": {
                    "line": 93,
                    "char": 29
                }
            },
            "type": {
                "actual": "\"a\"",
                "expected": "\"a\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 94,
                    "char": 9
                },
                "end": {
                    "line": 94,
                    "char": 41
                }
            },
            "type": {
                "actual": "{ a?: { b?: { a?: any | undefined; } | undefined; } | undefined; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 99,
                    "char": 9
                },
                "end": {
                    "line": 99,
                    "char": 46
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 136,
                    "char": 9
                },
                "end": {
                    "line": 136,
                    "char": 31
                }
            },
            "type": {
                "actual": "{ other: { age: number; }[]; user: { age: number; }; group: { members: { age: number; }[]; }; }",
                "expected": "{ user: { age: number; }; group: { members: { age: number; }[]; }; other: { age: number; }[]; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 149,
                    "char": 9
                },
                "end": {
                    "line": 149,
                    "char": 32
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/space\").SpaceConfig<\"onCycle\" | \"other\" | \"user\" | \"group\">"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 179,
                    "char": 9
                },
                "end": {
                    "line": 179,
                    "char": 26
                }
            },
            "type": {
                "actual": "{ groups: { members: { name: string; }[]; }[]; people: { name: string; }[]; }",
                "expected": "{ people: { name: string; }[]; groups: { members: { name: string; }[]; }[]; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 189,
                    "char": 9
                },
                "end": {
                    "line": 194,
                    "char": 10
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 200,
                    "char": 9
                },
                "end": {
                    "line": 204,
                    "char": 10
                }
            },
            "type": {
                "actual": "() => { definition: \"a\"; type: {}; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => {}; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": ""
        }
    ],
    "src/__tests__/stress.test.ts": [
        {
            "location": {
                "start": {
                    "line": 458,
                    "char": 9
                },
                "end": {
                    "line": 458,
                    "char": 49
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 913,
                    "char": 9
                },
                "end": {
                    "line": 913,
                    "char": 78
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        }
    ],
    "src/__tests__/typeOf.test.ts": [
        {
            "location": {
                "start": {
                    "line": 6,
                    "char": 9
                },
                "end": {
                    "line": 6,
                    "char": 31
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 7,
                    "char": 9
                },
                "end": {
                    "line": 7,
                    "char": 27
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 10,
                    "char": 9
                },
                "end": {
                    "line": 10,
                    "char": 26
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 11,
                    "char": 9
                },
                "end": {
                    "line": 11,
                    "char": 33
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 14,
                    "char": 9
                },
                "end": {
                    "line": 14,
                    "char": 29
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 15,
                    "char": 9
                },
                "end": {
                    "line": 15,
                    "char": 30
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 17,
                    "char": 26
                },
                "end": {
                    "line": 17,
                    "char": 51
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 18,
                    "char": 26
                },
                "end": {
                    "line": 18,
                    "char": 50
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 21,
                    "char": 9
                },
                "end": {
                    "line": 21,
                    "char": 34
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 22,
                    "char": 9
                },
                "end": {
                    "line": 22,
                    "char": 38
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 24,
                    "char": 24
                },
                "end": {
                    "line": 24,
                    "char": 44
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 26,
                    "char": 9
                },
                "end": {
                    "line": 26,
                    "char": 72
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 32,
                    "char": 9
                },
                "end": {
                    "line": 32,
                    "char": 37
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 35,
                    "char": 9
                },
                "end": {
                    "line": 35,
                    "char": 34
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 38,
                    "char": 9
                },
                "end": {
                    "line": 38,
                    "char": 58
                }
            },
            "type": {
                "actual": "import(\"/home/ssalb/2re-po/@re-/model/src/internal\").ExtractableDefinition"
            },
            "errors": ""
        }
    ],
    "src/definitions/__tests__/multifile.assert.ts": [
        {
            "location": {
                "start": {
                    "line": 14,
                    "char": 9
                },
                "end": {
                    "line": 14,
                    "char": 38
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 15,
                    "char": 9
                },
                "end": {
                    "line": 15,
                    "char": 33
                }
            },
            "type": {
                "actual": "{ name: string; groups: { name: string; members: { name: string; groups: { name: string; members: any[]; }[]; bestFriend?: any | undefined; }[]; }[]; bestFriend?: { name: string; groups: { name: string; members: { name: string; groups: any[]; bestFriend?: any | undefined; }[]; }[]; bestFriend?: any | undefined; } | undefined; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 18,
                    "char": 9
                },
                "end": {
                    "line": 18,
                    "char": 40
                }
            },
            "type": {
                "actual": "{ name: string; members: { name: string; groups: { name: string; members: { name: string; groups: any[]; bestFriend?: any | undefined; }[]; }[]; bestFriend?: any | undefined; }[]; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 21,
                    "char": 9
                },
                "end": {
                    "line": 21,
                    "char": 50
                }
            },
            "type": {
                "actual": "{ name: string; groups: { name: string; members: { name: string; groups: any[]; bestFriend?: any | undefined; }[]; }[]; bestFriend?: any | undefined; } | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 24,
                    "char": 9
                },
                "end": {
                    "line": 26,
                    "char": 10
                }
            },
            "type": {
                "actual": "{ foozler: { name: string; groups: { name: string; members: { name: string; groups: { name: string; members: any[]; }[]; bestFriend?: any | undefined; }[]; }[]; bestFriend?: { name: string; groups: { name: string; members: { name: string; groups: any[]; bestFriend?: any | undefined; }[]; }[]; bestFriend?: any | undefined; } | undefined; }; choozler: { name: string; members: { name: string; groups: { name: string; members: any[]; }[]; bestFriend?: any | undefined; }[]; }[]; }"
            },
            "errors": ""
        }
    ],
    "src/definitions/__tests__/root.assert.ts": [
        {
            "location": {
                "start": {
                    "line": 8,
                    "char": 9
                },
                "end": {
                    "line": 8,
                    "char": 47
                }
            },
            "type": {
                "actual": "() => { definition: { bad: symbol; }; type: { bad: \"Error: Values of type 'function' or 'symbol' are not valid definitions.\"; }; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => { bad: \"Error: Values of type 'function' or 'symbol' are not valid definitions.\"; }; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Type 'symbol' is not assignable to type '\"Error: Values of type 'function' or 'symbol' are not valid definitions.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 12,
                    "char": 9
                },
                "end": {
                    "line": 12,
                    "char": 49
                }
            },
            "type": {
                "actual": "() => { definition: { bad: () => {}; }; type: { bad: \"Error: Values of type 'function' or 'symbol' are not valid definitions.\"; }; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => { bad: \"Error: Values of type 'function' or 'symbol' are not valid definitions.\"; }; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Type '() => {}' is not assignable to type '\"Error: Values of type 'function' or 'symbol' are not valid definitions.\"'."
        }
    ],
    "src/definitions/obj/__tests__/index.ts": [
        {
            "location": {
                "start": {
                    "line": 15,
                    "char": 13
                },
                "end": {
                    "line": 15,
                    "char": 31
                }
            },
            "type": {
                "actual": "[true, { a: [string, [number | boolean[]]]; }]",
                "expected": "[true, { a: [string, [number | boolean[]]]; }]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 24,
                    "char": 17
                },
                "end": {
                    "line": 24,
                    "char": 73
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 30,
                    "char": 21
                },
                "end": {
                    "line": 35,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 40,
                    "char": 21
                },
                "end": {
                    "line": 40,
                    "char": 81
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 53,
                    "char": 13
                },
                "end": {
                    "line": 53,
                    "char": 37
                }
            },
            "type": {
                "actual": "[true, { a: [string, [number | boolean[]]]; }]"
            },
            "errors": ""
        }
    ],
    "src/definitions/obj/__tests__/map.assert.ts": [
        {
            "location": {
                "start": {
                    "line": 9,
                    "char": 13
                },
                "end": {
                    "line": 9,
                    "char": 31
                }
            },
            "type": {
                "actual": "{}",
                "expected": "{}"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 12,
                    "char": 13
                },
                "end": {
                    "line": 12,
                    "char": 45
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 13,
                    "char": 13
                },
                "end": {
                    "line": 13,
                    "char": 45
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 18,
                    "char": 13
                },
                "end": {
                    "line": 18,
                    "char": 37
                }
            },
            "type": {
                "actual": "{}"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 30,
                    "char": 13
                },
                "end": {
                    "line": 30,
                    "char": 33
                }
            },
            "type": {
                "actual": "{ a: string; b: number; c: 67; }",
                "expected": "{ a: string; b: number; c: 67; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 38,
                    "char": 17
                },
                "end": {
                    "line": 38,
                    "char": 77
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 43,
                    "char": 17
                },
                "end": {
                    "line": 54,
                    "char": 18
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 17
                },
                "end": {
                    "line": 66,
                    "char": 18
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 70,
                    "char": 21
                },
                "end": {
                    "line": 72,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 75,
                    "char": 21
                },
                "end": {
                    "line": 75,
                    "char": 64
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 80,
                    "char": 21
                },
                "end": {
                    "line": 88,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 91,
                    "char": 21
                },
                "end": {
                    "line": 97,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 104,
                    "char": 13
                },
                "end": {
                    "line": 104,
                    "char": 39
                }
            },
            "type": {
                "actual": "{ a: string; b: number; c: 67; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 117,
                    "char": 17
                },
                "end": {
                    "line": 117,
                    "char": 36
                }
            },
            "type": {
                "actual": "{ nested: { russian: \"doll\"; }; }",
                "expected": "{ nested: { russian: \"doll\"; }; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 126,
                    "char": 21
                },
                "end": {
                    "line": 126,
                    "char": 64
                }
            },
            "type": {
                "actual": "() => { definition: { a: { b: \"whoops\"; }; }; type: { a: { b: \"Error: Unable to determine the type of 'whoops'.\"; }; }; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => { a: { b: \"Error: Unable to determine the type of 'whoops'.\"; }; }; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Type '\"whoops\"' is not assignable to type '\"Error: Unable to determine the type of 'whoops'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 136,
                    "char": 17
                },
                "end": {
                    "line": 138,
                    "char": 18
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 142,
                    "char": 21
                },
                "end": {
                    "line": 145,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 150,
                    "char": 21
                },
                "end": {
                    "line": 160,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 172,
                    "char": 13
                },
                "end": {
                    "line": 172,
                    "char": 38
                }
            },
            "type": {
                "actual": "{ nested: { russian: \"doll\"; }; }"
            },
            "errors": ""
        }
    ],
    "src/definitions/obj/__tests__/tuple.assert.ts": [
        {
            "location": {
                "start": {
                    "line": 9,
                    "char": 13
                },
                "end": {
                    "line": 9,
                    "char": 31
                }
            },
            "type": {
                "actual": "[]",
                "expected": "[]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 12,
                    "char": 13
                },
                "end": {
                    "line": 12,
                    "char": 45
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 13,
                    "char": 13
                },
                "end": {
                    "line": 13,
                    "char": 45
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 18,
                    "char": 13
                },
                "end": {
                    "line": 18,
                    "char": 37
                }
            },
            "type": {
                "actual": "[]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 25,
                    "char": 17
                },
                "end": {
                    "line": 25,
                    "char": 37
                }
            },
            "type": {
                "actual": "[string, number, 6]",
                "expected": "[string, number, 6]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 29,
                    "char": 21
                },
                "end": {
                    "line": 32,
                    "char": 22
                }
            },
            "type": {
                "actual": "() => { definition: [\"string\", [\"number\", \"boolean\", \"whoops\"]]; type: [string, [number, boolean, \"Error: Unable to determine the type of 'whoops'.\"]]; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => [string, [number, boolean, \"Error: Unable to determine the type of 'whoops'.\"]]; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Type '\"whoops\"' is not assignable to type '\"Error: Unable to determine the type of 'whoops'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 42,
                    "char": 17
                },
                "end": {
                    "line": 42,
                    "char": 66
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 46,
                    "char": 21
                },
                "end": {
                    "line": 46,
                    "char": 71
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 51,
                    "char": 21
                },
                "end": {
                    "line": 51,
                    "char": 67
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 21
                },
                "end": {
                    "line": 58,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 65,
                    "char": 13
                },
                "end": {
                    "line": 65,
                    "char": 39
                }
            },
            "type": {
                "actual": "[string, number, 6]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 73,
                    "char": 13
                },
                "end": {
                    "line": 73,
                    "char": 32
                }
            },
            "type": {
                "actual": "[\"Cuckoo\", [\"Swallow\", \"Oriole\", \"Condor\"], []]",
                "expected": "[\"Cuckoo\", [\"Swallow\", \"Oriole\", \"Condor\"], []]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 81,
                    "char": 17
                },
                "end": {
                    "line": 87,
                    "char": 18
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 91,
                    "char": 21
                },
                "end": {
                    "line": 96,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 101,
                    "char": 21
                },
                "end": {
                    "line": 107,
                    "char": 22
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 119,
                    "char": 13
                },
                "end": {
                    "line": 119,
                    "char": 38
                }
            },
            "type": {
                "actual": "[\"Cuckoo\", [\"Swallow\", \"Oriole\", \"Condor\"], []]"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/alias.test.ts": [
        {
            "location": {
                "start": {
                    "line": 8,
                    "char": 13
                },
                "end": {
                    "line": 15,
                    "char": 14
                }
            },
            "type": {
                "actual": "true",
                "expected": "true"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 16,
                    "char": 13
                },
                "end": {
                    "line": 27,
                    "char": 14
                }
            },
            "type": {
                "actual": "{ snorf: { f: false; u: undefined; }[]; }",
                "expected": "{ snorf: { f: false; u: undefined; }[]; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 40,
                    "char": 13
                },
                "end": {
                    "line": 40,
                    "char": 45
                }
            },
            "type": {
                "actual": "{ b: { a: { b: { cyclic?: { a: { b: { a: { cyclic?: { b: { a: { b: any; isA: true; isB: false; }; isA: false; isB: true; }; isA: true; isB: false; } | undefined; }; isA: false; isB: true; }; isA: true; isB: false; }; isA: false; isB: true; } | undefined; }; isA: true; isB: false; }; isA: false; isB: true; }; isA: true; isB: false; } | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 41,
                    "char": 13
                },
                "end": {
                    "line": 41,
                    "char": 45
                }
            },
            "type": {
                "actual": "{ a: { b: { a: { cyclic?: { b: { a: { b: { cyclic?: { a: { b: { a: any; isA: false; isB: true; }; isA: true; isB: false; }; isA: false; isB: true; } | undefined; }; isA: true; isB: false; }; isA: false; isB: true; }; isA: true; isB: false; } | undefined; }; isA: false; isB: true; }; isA: true; isB: false; }; isA: false; isB: true; } | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 42,
                    "char": 13
                },
                "end": {
                    "line": 42,
                    "char": 59
                }
            },
            "type": {
                "actual": "{ a: { b: { a: { cyclic?: { b: { a: { b: { cyclic?: { a: { b: { a: any; isA: false; isB: true; }; isA: true; isB: false; }; isA: false; isB: true; } | undefined; }; isA: true; isB: false; }; isA: false; isB: true; }; isA: true; isB: false; } | undefined; }; isA: false; isB: true; }; isA: true; isB: false; }; isA: false; isB: true; } | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 58,
                    "char": 13
                },
                "end": {
                    "line": 58,
                    "char": 63
                }
            },
            "type": {
                "actual": "true",
                "expected": "true"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 59,
                    "char": 13
                },
                "end": {
                    "line": 59,
                    "char": 78
                }
            },
            "type": {
                "actual": "true",
                "expected": "true"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 62,
                    "char": 13
                },
                "end": {
                    "line": 62,
                    "char": 64
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": "Property 'wasResolved' does not exist on type '{ favoriteSoup: \"borscht\"; }'."
        },
        {
            "location": {
                "start": {
                    "line": 224,
                    "char": 13
                },
                "end": {
                    "line": 224,
                    "char": 42
                }
            },
            "type": {
                "actual": "any",
                "expected": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 231,
                    "char": 13
                },
                "end": {
                    "line": 231,
                    "char": 38
                }
            },
            "type": {
                "actual": "() => { literal: string; alias: any; }",
                "expected": "() => { literal: string; alias: any; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 235,
                    "char": 13
                },
                "end": {
                    "line": 235,
                    "char": 38
                }
            },
            "type": {
                "actual": "() => { literal: string; alias: any; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 239,
                    "char": 13
                },
                "end": {
                    "line": 243,
                    "char": 14
                }
            },
            "type": {
                "actual": "[number, any]",
                "expected": "[number, any]"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/bigintLiteral.test.ts": [
        {
            "location": {
                "start": {
                    "line": 7,
                    "char": 13
                },
                "end": {
                    "line": 7,
                    "char": 51
                }
            },
            "type": {
                "actual": "bigint",
                "expected": "bigint"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 10,
                    "char": 13
                },
                "end": {
                    "line": 10,
                    "char": 38
                }
            },
            "type": {
                "actual": "bigint",
                "expected": "bigint"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 15,
                    "char": 17
                },
                "end": {
                    "line": 15,
                    "char": 49
                }
            },
            "type": {
                "actual": "() => { definition: \"99999.99n\"; type: \"Error: Unable to determine the type of '99999.99n'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of '99999.99n'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"99999.99n\"' is not assignable to parameter of type '\"Error: Unable to determine the type of '99999.99n'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 23,
                    "char": 13
                },
                "end": {
                    "line": 28,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 31,
                    "char": 13
                },
                "end": {
                    "line": 33,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 37,
                    "char": 17
                },
                "end": {
                    "line": 37,
                    "char": 60
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 40,
                    "char": 17
                },
                "end": {
                    "line": 40,
                    "char": 54
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 46,
                    "char": 13
                },
                "end": {
                    "line": 46,
                    "char": 43
                }
            },
            "type": {
                "actual": "bigint"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 49,
                    "char": 13
                },
                "end": {
                    "line": 49,
                    "char": 44
                }
            },
            "type": {
                "actual": "bigint"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/constraint.test.ts": [
        {
            "location": {
                "start": {
                    "line": 7,
                    "char": 13
                },
                "end": {
                    "line": 7,
                    "char": 43
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 10,
                    "char": 13
                },
                "end": {
                    "line": 10,
                    "char": 48
                }
            },
            "type": {
                "actual": "number",
                "expected": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 15,
                    "char": 17
                },
                "end": {
                    "line": 15,
                    "char": 54
                }
            },
            "type": {
                "actual": "() => { definition: \"number<integer\"; type: \"Error: 'integer' must be a number literal to bound 'number'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: 'integer' must be a number literal to bound 'number'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"number<integer\"' is not assignable to parameter of type '\"Error: 'integer' must be a number literal to bound 'number'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 21,
                    "char": 17
                },
                "end": {
                    "line": 21,
                    "char": 53
                }
            },
            "type": {
                "actual": "() => { definition: \"null<number<5\"; type: \"Error: 'null' must be a number literal to bound 'number'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: 'null' must be a number literal to bound 'number'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"null<number<5\"' is not assignable to parameter of type '\"Error: 'null' must be a number literal to bound 'number'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 27,
                    "char": 17
                },
                "end": {
                    "line": 27,
                    "char": 55
                }
            },
            "type": {
                "actual": "() => { definition: \"1<number<string\"; type: \"Error: 'string' must be a number literal to bound 'number'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: 'string' must be a number literal to bound 'number'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"1<number<string\"' is not assignable to parameter of type '\"Error: 'string' must be a number literal to bound 'number'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 32,
                    "char": 17
                },
                "end": {
                    "line": 35,
                    "char": 18
                }
            },
            "type": {
                "actual": "() => { definition: \"number<number<number\"; type: \"Error: 'number' must be a number literal to bound 'number'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: 'number' must be a number literal to bound 'number'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"number<number<number\"' is not assignable to parameter of type '\"Error: 'number' must be a number literal to bound 'number'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 41,
                    "char": 17
                },
                "end": {
                    "line": 41,
                    "char": 50
                }
            },
            "type": {
                "actual": "() => { definition: \"object<999\"; type: \"Error: Bounded definition 'object' must be a number or string keyword.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Bounded definition 'object' must be a number or string keyword.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"object<999\"' is not assignable to parameter of type '\"Error: Bounded definition 'object' must be a number or string keyword.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 47,
                    "char": 17
                },
                "end": {
                    "line": 47,
                    "char": 52
                }
            },
            "type": {
                "actual": "() => { definition: \"1<object<999\"; type: \"Error: Bounded definition 'object' must be a number or string keyword.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Bounded definition 'object' must be a number or string keyword.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"1<object<999\"' is not assignable to parameter of type '\"Error: Bounded definition 'object' must be a number or string keyword.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 53,
                    "char": 17
                },
                "end": {
                    "line": 53,
                    "char": 56
                }
            },
            "type": {
                "actual": "() => { definition: \"null<object<true\"; type: \"Error: Bounded definition 'object' must be a number or string keyword.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Bounded definition 'object' must be a number or string keyword.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"null<object<true\"' is not assignable to parameter of type '\"Error: Bounded definition 'object' must be a number or string keyword.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 59,
                    "char": 17
                },
                "end": {
                    "line": 59,
                    "char": 52
                }
            },
            "type": {
                "actual": "() => { definition: \"1<2<number<4\"; type: \"Error: Constraints must be either of the form N<L or L<N<L, where N is a constrainable type (e.g. number), L is a number literal (e.g. 5), and < is any comparison operator.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Constraints must be either of the form N<L or L<N<L, where N is a constrainable type (e.g. number), L is a number literal (e.g. 5), and < is any comparison operator.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"1<2<number<4\"' is not assignable to parameter of type '\"Error: Constraints must be either of the form N<L or L<N<L, where N is a constrainable type (e.g. number), L is a number literal (e.g. 5), and < is any comparison operator.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 67,
                    "char": 13
                },
                "end": {
                    "line": 69,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 70,
                    "char": 13
                },
                "end": {
                    "line": 70,
                    "char": 58
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 71,
                    "char": 13
                },
                "end": {
                    "line": 71,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 72,
                    "char": 13
                },
                "end": {
                    "line": 72,
                    "char": 59
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 73,
                    "char": 13
                },
                "end": {
                    "line": 73,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 74,
                    "char": 13
                },
                "end": {
                    "line": 76,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 79,
                    "char": 13
                },
                "end": {
                    "line": 79,
                    "char": 56
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 80,
                    "char": 13
                },
                "end": {
                    "line": 80,
                    "char": 63
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 81,
                    "char": 13
                },
                "end": {
                    "line": 81,
                    "char": 57
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 82,
                    "char": 13
                },
                "end": {
                    "line": 82,
                    "char": 60
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 83,
                    "char": 13
                },
                "end": {
                    "line": 83,
                    "char": 59
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 84,
                    "char": 13
                },
                "end": {
                    "line": 84,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 87,
                    "char": 13
                },
                "end": {
                    "line": 87,
                    "char": 59
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 88,
                    "char": 13
                },
                "end": {
                    "line": 88,
                    "char": 66
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 89,
                    "char": 13
                },
                "end": {
                    "line": 89,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 90,
                    "char": 13
                },
                "end": {
                    "line": 90,
                    "char": 65
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 91,
                    "char": 13
                },
                "end": {
                    "line": 91,
                    "char": 66
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 92,
                    "char": 13
                },
                "end": {
                    "line": 92,
                    "char": 69
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 98,
                    "char": 17
                },
                "end": {
                    "line": 98,
                    "char": 65
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 99,
                    "char": 17
                },
                "end": {
                    "line": 99,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 100,
                    "char": 17
                },
                "end": {
                    "line": 100,
                    "char": 65
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 101,
                    "char": 17
                },
                "end": {
                    "line": 103,
                    "char": 18
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 104,
                    "char": 17
                },
                "end": {
                    "line": 104,
                    "char": 63
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 105,
                    "char": 17
                },
                "end": {
                    "line": 108,
                    "char": 18
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 111,
                    "char": 17
                },
                "end": {
                    "line": 111,
                    "char": 61
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 112,
                    "char": 17
                },
                "end": {
                    "line": 112,
                    "char": 68
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 113,
                    "char": 17
                },
                "end": {
                    "line": 113,
                    "char": 60
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 114,
                    "char": 17
                },
                "end": {
                    "line": 114,
                    "char": 63
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 115,
                    "char": 17
                },
                "end": {
                    "line": 115,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 116,
                    "char": 17
                },
                "end": {
                    "line": 116,
                    "char": 65
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 119,
                    "char": 17
                },
                "end": {
                    "line": 119,
                    "char": 64
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 120,
                    "char": 17
                },
                "end": {
                    "line": 120,
                    "char": 64
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 121,
                    "char": 17
                },
                "end": {
                    "line": 121,
                    "char": 70
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 122,
                    "char": 17
                },
                "end": {
                    "line": 122,
                    "char": 69
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 123,
                    "char": 17
                },
                "end": {
                    "line": 123,
                    "char": 69
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 124,
                    "char": 17
                },
                "end": {
                    "line": 124,
                    "char": 71
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 125,
                    "char": 17
                },
                "end": {
                    "line": 125,
                    "char": 66
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 126,
                    "char": 17
                },
                "end": {
                    "line": 126,
                    "char": 69
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 127,
                    "char": 17
                },
                "end": {
                    "line": 127,
                    "char": 73
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 133,
                    "char": 13
                },
                "end": {
                    "line": 133,
                    "char": 57
                }
            },
            "type": {
                "actual": "() => number"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/integration.test.ts": [
        {
            "location": {
                "start": {
                    "line": 8,
                    "char": 13
                },
                "end": {
                    "line": 8,
                    "char": 58
                }
            },
            "type": {
                "actual": "boolean[] | number[] | null",
                "expected": "boolean[] | number[] | null"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 14,
                    "char": 13
                },
                "end": {
                    "line": 14,
                    "char": 53
                }
            },
            "type": {
                "actual": "\"no\" | \"yes\" | \"maybe\"",
                "expected": "\"no\" | \"yes\" | \"maybe\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 20,
                    "char": 13
                },
                "end": {
                    "line": 20,
                    "char": 49
                }
            },
            "type": {
                "actual": "\"yes|no|maybe\"",
                "expected": "\"yes|no|maybe\""
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/intersection.test.ts": [
        {
            "location": {
                "start": {
                    "line": 7,
                    "char": 13
                },
                "end": {
                    "line": 7,
                    "char": 47
                }
            },
            "type": {
                "actual": "true",
                "expected": "true"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 10,
                    "char": 13
                },
                "end": {
                    "line": 10,
                    "char": 56
                }
            },
            "type": {
                "actual": "false",
                "expected": "false"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 14,
                    "char": 13
                },
                "end": {
                    "line": 14,
                    "char": 48
                }
            },
            "type": {
                "actual": "never",
                "expected": "never"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 19,
                    "char": 17
                },
                "end": {
                    "line": 19,
                    "char": 51
                }
            },
            "type": {
                "actual": "() => { definition: \"boolean&tru\"; type: never; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => never; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"boolean&tru\"' is not assignable to parameter of type '\"Error: Unable to determine the type of 'tru'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 25,
                    "char": 17
                },
                "end": {
                    "line": 25,
                    "char": 53
                }
            },
            "type": {
                "actual": "() => { definition: \"boolean&&true\"; type: never; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => never; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"boolean&&true\"' is not assignable to parameter of type '\"Error: Unable to determine the type of ''.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 33,
                    "char": 13
                },
                "end": {
                    "line": 33,
                    "char": 63
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 36,
                    "char": 13
                },
                "end": {
                    "line": 36,
                    "char": 73
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 41,
                    "char": 13
                },
                "end": {
                    "line": 41,
                    "char": 67
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 46,
                    "char": 17
                },
                "end": {
                    "line": 46,
                    "char": 67
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 49,
                    "char": 17
                },
                "end": {
                    "line": 49,
                    "char": 70
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 52,
                    "char": 17
                },
                "end": {
                    "line": 54,
                    "char": 18
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 57,
                    "char": 17
                },
                "end": {
                    "line": 57,
                    "char": 70
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 63,
                    "char": 13
                },
                "end": {
                    "line": 63,
                    "char": 59
                }
            },
            "type": {
                "actual": "() => true"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/keyword.test.ts": [
        {
            "location": {
                "start": {
                    "line": 8,
                    "char": 13
                },
                "end": {
                    "line": 8,
                    "char": 27
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 11,
                    "char": 13
                },
                "end": {
                    "line": 11,
                    "char": 33
                }
            },
            "type": {
                "actual": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 14,
                    "char": 13
                },
                "end": {
                    "line": 14,
                    "char": 45
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 15,
                    "char": 13
                },
                "end": {
                    "line": 15,
                    "char": 49
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 21,
                    "char": 13
                },
                "end": {
                    "line": 21,
                    "char": 27
                }
            },
            "type": {
                "actual": "number",
                "expected": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 24,
                    "char": 13
                },
                "end": {
                    "line": 24,
                    "char": 33
                }
            },
            "type": {
                "actual": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 27,
                    "char": 13
                },
                "end": {
                    "line": 27,
                    "char": 42
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 28,
                    "char": 13
                },
                "end": {
                    "line": 28,
                    "char": 44
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 29,
                    "char": 13
                },
                "end": {
                    "line": 29,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 35,
                    "char": 13
                },
                "end": {
                    "line": 35,
                    "char": 27
                }
            },
            "type": {
                "actual": "boolean",
                "expected": "boolean"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 38,
                    "char": 13
                },
                "end": {
                    "line": 38,
                    "char": 33
                }
            },
            "type": {
                "actual": "boolean"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 41,
                    "char": 13
                },
                "end": {
                    "line": 41,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 42,
                    "char": 13
                },
                "end": {
                    "line": 42,
                    "char": 44
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 43,
                    "char": 13
                },
                "end": {
                    "line": 43,
                    "char": 40
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 49,
                    "char": 13
                },
                "end": {
                    "line": 49,
                    "char": 27
                }
            },
            "type": {
                "actual": "true",
                "expected": "true"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 52,
                    "char": 13
                },
                "end": {
                    "line": 52,
                    "char": 33
                }
            },
            "type": {
                "actual": "true"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 55,
                    "char": 13
                },
                "end": {
                    "line": 55,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 13
                },
                "end": {
                    "line": 56,
                    "char": 44
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 62,
                    "char": 13
                },
                "end": {
                    "line": 62,
                    "char": 27
                }
            },
            "type": {
                "actual": "false",
                "expected": "false"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 65,
                    "char": 13
                },
                "end": {
                    "line": 65,
                    "char": 33
                }
            },
            "type": {
                "actual": "false"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 68,
                    "char": 13
                },
                "end": {
                    "line": 68,
                    "char": 44
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 69,
                    "char": 13
                },
                "end": {
                    "line": 69,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 75,
                    "char": 13
                },
                "end": {
                    "line": 75,
                    "char": 27
                }
            },
            "type": {
                "actual": "bigint",
                "expected": "bigint"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 78,
                    "char": 13
                },
                "end": {
                    "line": 78,
                    "char": 33
                }
            },
            "type": {
                "actual": "bigint"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 81,
                    "char": 13
                },
                "end": {
                    "line": 81,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 82,
                    "char": 13
                },
                "end": {
                    "line": 82,
                    "char": 42
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 88,
                    "char": 13
                },
                "end": {
                    "line": 88,
                    "char": 27
                }
            },
            "type": {
                "actual": "symbol",
                "expected": "symbol"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 91,
                    "char": 13
                },
                "end": {
                    "line": 91,
                    "char": 40
                }
            },
            "type": {
                "actual": "\"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 94,
                    "char": 13
                },
                "end": {
                    "line": 94,
                    "char": 49
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 95,
                    "char": 13
                },
                "end": {
                    "line": 95,
                    "char": 42
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 101,
                    "char": 13
                },
                "end": {
                    "line": 101,
                    "char": 27
                }
            },
            "type": {
                "actual": "never",
                "expected": "(...args: any[]) => any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 105,
                    "char": 13
                },
                "end": {
                    "line": 105,
                    "char": 37
                }
            },
            "type": {
                "actual": "\"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 106,
                    "char": 13
                },
                "end": {
                    "line": 106,
                    "char": 44
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": "This expression is not callable.Type 'never' has no call signatures."
        },
        {
            "location": {
                "start": {
                    "line": 109,
                    "char": 13
                },
                "end": {
                    "line": 109,
                    "char": 49
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 110,
                    "char": 13
                },
                "end": {
                    "line": 110,
                    "char": 41
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 116,
                    "char": 13
                },
                "end": {
                    "line": 116,
                    "char": 27
                }
            },
            "type": {
                "actual": "object",
                "expected": "object"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 119,
                    "char": 13
                },
                "end": {
                    "line": 119,
                    "char": 33
                }
            },
            "type": {
                "actual": "object"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 122,
                    "char": 13
                },
                "end": {
                    "line": 122,
                    "char": 41
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 123,
                    "char": 13
                },
                "end": {
                    "line": 123,
                    "char": 41
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 124,
                    "char": 13
                },
                "end": {
                    "line": 124,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 130,
                    "char": 13
                },
                "end": {
                    "line": 130,
                    "char": 27
                }
            },
            "type": {
                "actual": "undefined",
                "expected": "undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 133,
                    "char": 13
                },
                "end": {
                    "line": 133,
                    "char": 33
                }
            },
            "type": {
                "actual": "undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 136,
                    "char": 13
                },
                "end": {
                    "line": 136,
                    "char": 48
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 137,
                    "char": 13
                },
                "end": {
                    "line": 137,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 143,
                    "char": 13
                },
                "end": {
                    "line": 143,
                    "char": 27
                }
            },
            "type": {
                "actual": "null",
                "expected": "null"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 146,
                    "char": 13
                },
                "end": {
                    "line": 146,
                    "char": 33
                }
            },
            "type": {
                "actual": "null"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 149,
                    "char": 13
                },
                "end": {
                    "line": 149,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 150,
                    "char": 13
                },
                "end": {
                    "line": 150,
                    "char": 48
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 156,
                    "char": 13
                },
                "end": {
                    "line": 156,
                    "char": 27
                }
            },
            "type": {
                "actual": "void",
                "expected": "void"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 159,
                    "char": 13
                },
                "end": {
                    "line": 159,
                    "char": 33
                }
            },
            "type": {
                "actual": "void"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 162,
                    "char": 13
                },
                "end": {
                    "line": 162,
                    "char": 48
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 163,
                    "char": 13
                },
                "end": {
                    "line": 163,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 169,
                    "char": 13
                },
                "end": {
                    "line": 169,
                    "char": 27
                }
            },
            "type": {
                "actual": "any",
                "expected": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 172,
                    "char": 13
                },
                "end": {
                    "line": 172,
                    "char": 33
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 175,
                    "char": 13
                },
                "end": {
                    "line": 175,
                    "char": 47
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 176,
                    "char": 13
                },
                "end": {
                    "line": 176,
                    "char": 52
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 177,
                    "char": 13
                },
                "end": {
                    "line": 177,
                    "char": 55
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 184,
                    "char": 13
                },
                "end": {
                    "line": 184,
                    "char": 27
                }
            },
            "type": {
                "actual": "unknown",
                "expected": "unknown"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 187,
                    "char": 13
                },
                "end": {
                    "line": 187,
                    "char": 33
                }
            },
            "type": {
                "actual": "unknown"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 190,
                    "char": 13
                },
                "end": {
                    "line": 190,
                    "char": 46
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 191,
                    "char": 13
                },
                "end": {
                    "line": 191,
                    "char": 52
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 192,
                    "char": 13
                },
                "end": {
                    "line": 192,
                    "char": 55
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 199,
                    "char": 13
                },
                "end": {
                    "line": 199,
                    "char": 27
                }
            },
            "type": {
                "actual": "never",
                "expected": "never"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 202,
                    "char": 13
                },
                "end": {
                    "line": 202,
                    "char": 39
                }
            },
            "type": {
                "actual": "() => never"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 207,
                    "char": 13
                },
                "end": {
                    "line": 207,
                    "char": 50
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 208,
                    "char": 13
                },
                "end": {
                    "line": 208,
                    "char": 48
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 214,
                    "char": 13
                },
                "end": {
                    "line": 214,
                    "char": 31
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 215,
                    "char": 13
                },
                "end": {
                    "line": 215,
                    "char": 59
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 216,
                    "char": 13
                },
                "end": {
                    "line": 216,
                    "char": 59
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 220,
                    "char": 13
                },
                "end": {
                    "line": 220,
                    "char": 31
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 221,
                    "char": 13
                },
                "end": {
                    "line": 221,
                    "char": 48
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 222,
                    "char": 13
                },
                "end": {
                    "line": 222,
                    "char": 50
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 226,
                    "char": 13
                },
                "end": {
                    "line": 226,
                    "char": 38
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 227,
                    "char": 13
                },
                "end": {
                    "line": 227,
                    "char": 58
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 228,
                    "char": 13
                },
                "end": {
                    "line": 228,
                    "char": 59
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 232,
                    "char": 13
                },
                "end": {
                    "line": 232,
                    "char": 35
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 233,
                    "char": 13
                },
                "end": {
                    "line": 233,
                    "char": 72
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 236,
                    "char": 13
                },
                "end": {
                    "line": 236,
                    "char": 55
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 240,
                    "char": 13
                },
                "end": {
                    "line": 240,
                    "char": 35
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 241,
                    "char": 13
                },
                "end": {
                    "line": 241,
                    "char": 72
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 244,
                    "char": 13
                },
                "end": {
                    "line": 244,
                    "char": 55
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 248,
                    "char": 13
                },
                "end": {
                    "line": 248,
                    "char": 35
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 249,
                    "char": 13
                },
                "end": {
                    "line": 249,
                    "char": 50
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 250,
                    "char": 13
                },
                "end": {
                    "line": 250,
                    "char": 51
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 256,
                    "char": 13
                },
                "end": {
                    "line": 256,
                    "char": 33
                }
            },
            "type": {
                "actual": "number",
                "expected": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 257,
                    "char": 13
                },
                "end": {
                    "line": 257,
                    "char": 46
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 258,
                    "char": 13
                },
                "end": {
                    "line": 258,
                    "char": 51
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 262,
                    "char": 13
                },
                "end": {
                    "line": 262,
                    "char": 34
                }
            },
            "type": {
                "actual": "number",
                "expected": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 263,
                    "char": 13
                },
                "end": {
                    "line": 263,
                    "char": 52
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 264,
                    "char": 13
                },
                "end": {
                    "line": 264,
                    "char": 53
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 268,
                    "char": 13
                },
                "end": {
                    "line": 268,
                    "char": 37
                }
            },
            "type": {
                "actual": "number",
                "expected": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 269,
                    "char": 13
                },
                "end": {
                    "line": 269,
                    "char": 50
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 270,
                    "char": 13
                },
                "end": {
                    "line": 270,
                    "char": 53
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/list.test.ts": [
        {
            "location": {
                "start": {
                    "line": 8,
                    "char": 13
                },
                "end": {
                    "line": 8,
                    "char": 43
                }
            },
            "type": {
                "actual": "string[]",
                "expected": "string[]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 11,
                    "char": 13
                },
                "end": {
                    "line": 11,
                    "char": 45
                }
            },
            "type": {
                "actual": "number[][]",
                "expected": "number[][]"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 16,
                    "char": 17
                },
                "end": {
                    "line": 16,
                    "char": 53
                }
            },
            "type": {
                "actual": "() => { definition: \"nonexistent[]\"; type: \"Error: Unable to determine the type of 'nonexistent'.\"[]; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of 'nonexistent'.\"[]; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"nonexistent[]\"' is not assignable to parameter of type '\"Error: Unable to determine the type of 'nonexistent'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 22,
                    "char": 17
                },
                "end": {
                    "line": 22,
                    "char": 48
                }
            },
            "type": {
                "actual": "() => { definition: \"boolean[\"; type: \"Error: Unable to determine the type of 'boolean['.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of 'boolean['.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"boolean[\"' is not assignable to parameter of type '\"Error: Unable to determine the type of 'boolean['.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 28,
                    "char": 17
                },
                "end": {
                    "line": 28,
                    "char": 45
                }
            },
            "type": {
                "actual": "() => { definition: \"[any]\"; type: \"Error: Unable to determine the type of '[any]'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of '[any]'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"[any]\"' is not assignable to parameter of type '\"Error: Unable to determine the type of '[any]'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 37,
                    "char": 13
                },
                "end": {
                    "line": 37,
                    "char": 51
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 40,
                    "char": 13
                },
                "end": {
                    "line": 40,
                    "char": 52
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 43,
                    "char": 13
                },
                "end": {
                    "line": 43,
                    "char": 70
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 49,
                    "char": 17
                },
                "end": {
                    "line": 49,
                    "char": 55
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 52,
                    "char": 17
                },
                "end": {
                    "line": 52,
                    "char": 70
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 58,
                    "char": 13
                },
                "end": {
                    "line": 58,
                    "char": 49
                }
            },
            "type": {
                "actual": "number[]"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/numberLiteral.test.ts": [
        {
            "location": {
                "start": {
                    "line": 12,
                    "char": 13
                },
                "end": {
                    "line": 12,
                    "char": 36
                }
            },
            "type": {
                "actual": "number",
                "expected": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 15,
                    "char": 13
                },
                "end": {
                    "line": 15,
                    "char": 40
                }
            },
            "type": {
                "actual": "number",
                "expected": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 18,
                    "char": 13
                },
                "end": {
                    "line": 18,
                    "char": 39
                }
            },
            "type": {
                "actual": "number",
                "expected": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 23,
                    "char": 17
                },
                "end": {
                    "line": 23,
                    "char": 49
                }
            },
            "type": {
                "actual": "() => { definition: \"127.0.0.1\"; type: \"Error: Unable to determine the type of '127.0.0.1'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of '127.0.0.1'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"127.0.0.1\"' is not assignable to parameter of type '\"Error: Unable to determine the type of '127.0.0.1'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 29,
                    "char": 17
                },
                "end": {
                    "line": 29,
                    "char": 48
                }
            },
            "type": {
                "actual": "() => { definition: \"13three7\"; type: \"Error: Unable to determine the type of '13three7'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of '13three7'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"13three7\"' is not assignable to parameter of type '\"Error: Unable to determine the type of '13three7'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 38,
                    "char": 13
                },
                "end": {
                    "line": 38,
                    "char": 38
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 39,
                    "char": 13
                },
                "end": {
                    "line": 39,
                    "char": 38
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 40,
                    "char": 13
                },
                "end": {
                    "line": 40,
                    "char": 46
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 43,
                    "char": 13
                },
                "end": {
                    "line": 43,
                    "char": 40
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 47,
                    "char": 13
                },
                "end": {
                    "line": 47,
                    "char": 42
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 48,
                    "char": 13
                },
                "end": {
                    "line": 48,
                    "char": 38
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 49,
                    "char": 13
                },
                "end": {
                    "line": 49,
                    "char": 44
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 55,
                    "char": 13
                },
                "end": {
                    "line": 55,
                    "char": 43
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 13
                },
                "end": {
                    "line": 56,
                    "char": 40
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 57,
                    "char": 13
                },
                "end": {
                    "line": 57,
                    "char": 45
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 64,
                    "char": 13
                },
                "end": {
                    "line": 64,
                    "char": 43
                }
            },
            "type": {
                "actual": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 67,
                    "char": 13
                },
                "end": {
                    "line": 67,
                    "char": 46
                }
            },
            "type": {
                "actual": "number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 70,
                    "char": 13
                },
                "end": {
                    "line": 70,
                    "char": 47
                }
            },
            "type": {
                "actual": "number"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/optional.test.ts": [
        {
            "location": {
                "start": {
                    "line": 7,
                    "char": 13
                },
                "end": {
                    "line": 7,
                    "char": 42
                }
            },
            "type": {
                "actual": "string | undefined",
                "expected": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 10,
                    "char": 13
                },
                "end": {
                    "line": 15,
                    "char": 14
                }
            },
            "type": {
                "actual": "{ required: boolean; optional?: boolean | undefined; }",
                "expected": "{ required: boolean; optional?: boolean | undefined; }"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 23,
                    "char": 17
                },
                "end": {
                    "line": 23,
                    "char": 52
                }
            },
            "type": {
                "actual": "() => { definition: \"nonexistent?\"; type: \"Error: Unable to determine the type of 'nonexistent'.\" | undefined; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of 'nonexistent'.\" | undefined; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"nonexistent?\"' is not assignable to parameter of type '\"Error: Unable to determine the type of 'nonexistent'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 29,
                    "char": 17
                },
                "end": {
                    "line": 29,
                    "char": 49
                }
            },
            "type": {
                "actual": "() => { definition: \"boolean??\"; type: boolean | undefined; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => boolean | undefined; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"boolean??\"' is not assignable to parameter of type '\"Modifier '?' is only valid at the end of a type definition.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 34,
                    "char": 17
                },
                "end": {
                    "line": 40,
                    "char": 18
                }
            },
            "type": {
                "actual": "() => { definition: { a: \"string\"; b: \"number?|string?\"; }; type: { a: string; b?: string | number | undefined; }; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => { a: string; b?: string | number | undefined; }; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Type '\"number?|string?\"' is not assignable to type '\"Modifier '?' is only valid at the end of a type definition.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 45,
                    "char": 17
                },
                "end": {
                    "line": 48,
                    "char": 18
                }
            },
            "type": {
                "actual": "() => { definition: \"boolean?|string|number\"; type: string | number | boolean | undefined; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => string | number | boolean | undefined; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"boolean?|string|number\"' is not assignable to parameter of type '\"Modifier '?' is only valid at the end of a type definition.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 13
                },
                "end": {
                    "line": 56,
                    "char": 58
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 59,
                    "char": 13
                },
                "end": {
                    "line": 59,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 62,
                    "char": 13
                },
                "end": {
                    "line": 67,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 71,
                    "char": 17
                },
                "end": {
                    "line": 71,
                    "char": 61
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 77,
                    "char": 13
                },
                "end": {
                    "line": 77,
                    "char": 46
                }
            },
            "type": {
                "actual": "null | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 80,
                    "char": 13
                },
                "end": {
                    "line": 82,
                    "char": 14
                }
            },
            "type": {
                "actual": "{ required: string; optional?: string | undefined; }"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/regex.test.ts": [
        {
            "location": {
                "start": {
                    "line": 7,
                    "char": 13
                },
                "end": {
                    "line": 7,
                    "char": 39
                }
            },
            "type": {
                "actual": "string",
                "expected": "string"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 12,
                    "char": 17
                },
                "end": {
                    "line": 12,
                    "char": 43
                }
            },
            "type": {
                "actual": "() => { definition: \"/.*\"; type: \"Error: Unable to determine the type of '/.*'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of '/.*'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"/.*\"' is not assignable to parameter of type '\"Error: Unable to determine the type of '/.*'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 18,
                    "char": 17
                },
                "end": {
                    "line": 18,
                    "char": 45
                }
            },
            "type": {
                "actual": "() => { definition: \"/.*//\"; type: \"Error: Unable to determine the type of '/.*//'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of '/.*//'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"/.*//\"' is not assignable to parameter of type '\"Error: Unable to determine the type of '/.*//'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 26,
                    "char": 13
                },
                "end": {
                    "line": 26,
                    "char": 61
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 29,
                    "char": 13
                },
                "end": {
                    "line": 32,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 36,
                    "char": 17
                },
                "end": {
                    "line": 36,
                    "char": 71
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 41,
                    "char": 17
                },
                "end": {
                    "line": 41,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 44,
                    "char": 17
                },
                "end": {
                    "line": 48,
                    "char": 18
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 13
                },
                "end": {
                    "line": 56,
                    "char": 51
                }
            },
            "type": {
                "actual": "() => string"
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/stringLiteral.test.ts": [
        {
            "location": {
                "start": {
                    "line": 7,
                    "char": 13
                },
                "end": {
                    "line": 7,
                    "char": 42
                }
            },
            "type": {
                "actual": "\"hello\"",
                "expected": "\"hello\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 10,
                    "char": 13
                },
                "end": {
                    "line": 10,
                    "char": 44
                }
            },
            "type": {
                "actual": "\"goodbye\"",
                "expected": "\"goodbye\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 13,
                    "char": 13
                },
                "end": {
                    "line": 13,
                    "char": 52
                }
            },
            "type": {
                "actual": "\"'single-quoted'\"",
                "expected": "\"'single-quoted'\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 16,
                    "char": 13
                },
                "end": {
                    "line": 16,
                    "char": 52
                }
            },
            "type": {
                "actual": "\"\\\"double-quoted\\\"\"",
                "expected": "\"\\\"double-quoted\\\"\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 19,
                    "char": 13
                },
                "end": {
                    "line": 19,
                    "char": 52
                }
            },
            "type": {
                "actual": "\"this has spaces\"",
                "expected": "\"this has spaces\""
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 24,
                    "char": 17
                },
                "end": {
                    "line": 24,
                    "char": 51
                }
            },
            "type": {
                "actual": "() => { definition: \"'mismatched\"; type: \"Error: Unable to determine the type of ''mismatched'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of ''mismatched'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"'mismatched\"' is not assignable to parameter of type '\"Error: Unable to determine the type of ''mismatched'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 30,
                    "char": 17
                },
                "end": {
                    "line": 30,
                    "char": 52
                }
            },
            "type": {
                "actual": "() => { definition: \"\\\"mismatched'\"; type: \"Error: Unable to determine the type of '\\\"mismatched''.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of '\\\"mismatched''.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"\\\"mismatched'\"' is not assignable to parameter of type '\"Error: Unable to determine the type of '\\\"mismatched''.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 35,
                    "char": 17
                },
                "end": {
                    "line": 38,
                    "char": 18
                }
            },
            "type": {
                "actual": "() => { definition: \"'this isn't allowed'\"; type: \"Error: Unable to determine the type of ''this isn't allowed''.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of ''this isn't allowed''.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"'this isn't allowed'\"' is not assignable to parameter of type '\"Error: Unable to determine the type of ''this isn't allowed''.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 43,
                    "char": 17
                },
                "end": {
                    "line": 46,
                    "char": 18
                }
            },
            "type": {
                "actual": "() => { definition: \"\\\"not \\\"ok\\\"\\\"\"; type: \"Error: Unable to determine the type of '\\\"not \\\"ok\\\"\\\"'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => \"Error: Unable to determine the type of '\\\"not \\\"ok\\\"\\\"'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"\\\"not \\\"ok\\\"\\\"\"' is not assignable to parameter of type '\"Error: Unable to determine the type of '\\\"not \\\"ok\\\"\\\"'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 54,
                    "char": 13
                },
                "end": {
                    "line": 54,
                    "char": 67
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 58,
                    "char": 17
                },
                "end": {
                    "line": 58,
                    "char": 71
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 66,
                    "char": 13
                },
                "end": {
                    "line": 66,
                    "char": 52
                }
            },
            "type": {
                "actual": "\"generated\""
            },
            "errors": ""
        }
    ],
    "src/definitions/str/__tests__/union.test.ts": [
        {
            "location": {
                "start": {
                    "line": 8,
                    "char": 13
                },
                "end": {
                    "line": 8,
                    "char": 48
                }
            },
            "type": {
                "actual": "string | number",
                "expected": "string | number"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 11,
                    "char": 13
                },
                "end": {
                    "line": 11,
                    "char": 60
                }
            },
            "type": {
                "actual": "number | false | \"\" | null | undefined",
                "expected": "number | false | \"\" | null | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 21,
                    "char": 17
                },
                "end": {
                    "line": 21,
                    "char": 52
                }
            },
            "type": {
                "actual": "() => { definition: \"number|sting\"; type: number | \"Error: Unable to determine the type of 'sting'.\"; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => number | \"Error: Unable to determine the type of 'sting'.\"; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"number|sting\"' is not assignable to parameter of type '\"Error: Unable to determine the type of 'sting'.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 27,
                    "char": 17
                },
                "end": {
                    "line": 27,
                    "char": 53
                }
            },
            "type": {
                "actual": "() => { definition: \"boolean||null\"; type: boolean | \"Error: Unable to determine the type of ''.\" | null; config: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ModelOptions; validate: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateFunction; assert: (value: unknown, options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ValidateConfig | undefined) => void; generate: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").GenerateConfig | undefined) => boolean | \"Error: Unable to determine the type of ''.\" | null; references: (options?: import(\"/home/ssalb/2re-po/@re-/model/src/model\").ReferencesConfig | undefined) => any; }"
            },
            "errors": "Argument of type '\"boolean||null\"' is not assignable to parameter of type '\"Error: Unable to determine the type of ''.\"'."
        },
        {
            "location": {
                "start": {
                    "line": 35,
                    "char": 13
                },
                "end": {
                    "line": 35,
                    "char": 62
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 38,
                    "char": 13
                },
                "end": {
                    "line": 41,
                    "char": 14
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 45,
                    "char": 17
                },
                "end": {
                    "line": 45,
                    "char": 68
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 50,
                    "char": 17
                },
                "end": {
                    "line": 50,
                    "char": 59
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 13
                },
                "end": {
                    "line": 56,
                    "char": 57
                }
            },
            "type": {
                "actual": "string | undefined"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 57,
                    "char": 13
                },
                "end": {
                    "line": 57,
                    "char": 69
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 58,
                    "char": 13
                },
                "end": {
                    "line": 58,
                    "char": 54
                }
            },
            "type": {
                "actual": "symbol | object"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 68,
                    "char": 13
                },
                "end": {
                    "line": 68,
                    "char": 73
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 69,
                    "char": 13
                },
                "end": {
                    "line": 69,
                    "char": 68
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 72,
                    "char": 13
                },
                "end": {
                    "line": 84,
                    "char": 14
                }
            },
            "type": {
                "actual": "any"
            },
            "errors": ""
        },
        {
            "location": {
                "start": {
                    "line": 87,
                    "char": 13
                },
                "end": {
                    "line": 100,
                    "char": 14
                }
            },
            "type": {
                "actual": "false | { b: { a: { b: { a: any; }; }; }; } | { a: { b: { a: { b: any; }; }; }; }"
            },
            "errors": ""
        }
    ],
    "queuedUpdates": [
        {
            "position": {
                "method": "Object.<anonymous>",
                "file": "/home/ssalb/2re-po/@re-/model/src/definitions/str/__tests__/keyword.test.ts",
                "line": 216,
                "char": 59
            },
            "serializedValue": "undefined"
        }
    ]
}
