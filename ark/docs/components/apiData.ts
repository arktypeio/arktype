import type { ApiDocsByGroup } from "../../repo/jsdocGen.ts"

/** THIS FILE IS AUTOGENERATED FROM ark/repo/jsdocGen.ts **/
// prettier-ignore
export const apiDocsByGroup: ApiDocsByGroup = {
    "Traversal": [
        {
            "group": "Traversal",
            "name": "path",
            "summary": [
                {
                    "kind": "text",
                    "value": "the path being validated or morphed"
                }
            ],
            "notes": [
                [],
                [
                    {
                        "kind": "noteStart",
                        "value": "‚úÖ array indices represented as numbers"
                    }
                ],
                [
                    {
                        "kind": "noteStart",
                        "value": "‚ö†Ô∏è mutated during traversal - use `path.slice(0)` to snapshot"
                    }
                ],
                [
                    {
                        "kind": "noteStart",
                        "value": "üîó use"
                    },
                    {
                        "kind": "reference",
                        "value": "propString"
                    },
                    {
                        "kind": "text",
                        "value": "for a stringified version"
                    }
                ]
            ]
        },
        {
            "group": "Traversal",
            "name": "errors",
            "summary": [
                {
                    "kind": "reference",
                    "value": "ArkErrors"
                },
                {
                    "kind": "text",
                    "value": "that will be part of this traversal's finalized result"
                }
            ],
            "notes": [
                [],
                [
                    {
                        "kind": "noteStart",
                        "value": "‚úÖ will always be an empty array for a valid traversal"
                    }
                ]
            ]
        },
        {
            "group": "Traversal",
            "name": "root",
            "summary": [
                {
                    "kind": "text",
                    "value": "the original value being traversed"
                }
            ],
            "notes": []
        },
        {
            "group": "Traversal",
            "name": "config",
            "summary": [
                {
                    "kind": "text",
                    "value": "configuration for this traversal"
                }
            ],
            "notes": [
                [],
                [
                    {
                        "kind": "noteStart",
                        "value": "‚úÖ options can affect traversal results and error messages"
                    }
                ],
                [
                    {
                        "kind": "noteStart",
                        "value": "‚úÖ defaults < global config < scope config"
                    }
                ],
                [
                    {
                        "kind": "noteStart",
                        "value": "‚úÖ does not include options configured on individual types"
                    }
                ]
            ]
        },
        {
            "group": "Traversal",
            "name": "reject",
            "summary": [
                {
                    "kind": "text",
                    "value": "add an"
                },
                {
                    "kind": "reference",
                    "value": "ArkError"
                },
                {
                    "kind": "text",
                    "value": "and return `false`"
                }
            ],
            "notes": [
                [],
                [
                    {
                        "kind": "noteStart",
                        "value": "‚úÖ useful for predicates like `.narrow`"
                    }
                ]
            ]
        },
        {
            "group": "Traversal",
            "name": "mustBe",
            "summary": [
                {
                    "kind": "text",
                    "value": "add an"
                },
                {
                    "kind": "reference",
                    "value": "ArkError"
                },
                {
                    "kind": "text",
                    "value": "from a description and return `false`"
                }
            ],
            "notes": [
                [],
                [
                    {
                        "kind": "noteStart",
                        "value": "‚úÖ useful for predicates like `.narrow`"
                    }
                ],
                [
                    {
                        "kind": "noteStart",
                        "value": "üîó equivalent to"
                    },
                    {
                        "kind": "reference",
                        "value": "reject"
                    },
                    {
                        "kind": "text",
                        "value": "({ expected })"
                    }
                ]
            ]
        },
        {
            "group": "Traversal",
            "name": "error",
            "summary": [
                {
                    "kind": "text",
                    "value": "add and return an"
                },
                {
                    "kind": "reference",
                    "value": "ArkError"
                }
            ],
            "notes": [
                [
                    {
                        "kind": "noteStart",
                        "value": "‚úÖ useful for morphs like `.pipe`"
                    }
                ]
            ]
        },
        {
            "group": "Traversal",
            "name": "hasError",
            "summary": [
                {
                    "kind": "text",
                    "value": "whether"
                },
                {
                    "kind": "reference",
                    "value": "currentBranch"
                },
                {
                    "kind": "text",
                    "value": "(or the traversal root, outside a union) has one or more errors"
                }
            ],
            "notes": []
        }
    ]
}
