{
    "multifile.test.ts": [
        {
            "type": {
                "actual": "{ i: string; }",
                "expected": "{ i: string; }"
            },
            "errors": "",
            "position": {
                "line": 5,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ g: unknown; }",
                "expected": "{ g: string; }"
            },
            "errors": "",
            "position": {
                "line": 7,
                "char": 15
            }
        }
    ],
    "assert.test.ts": [
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 18,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 19,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 20,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }",
                "expected": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 23,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }",
                "expected": "{ re: number; }"
            },
            "errors": "",
            "position": {
                "line": 26,
                "char": 24
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 29,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 32,
                "char": 24
            }
        },
        {
            "type": {
                "actual": "null",
                "expected": "null"
            },
            "errors": "",
            "position": {
                "line": 35,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "string",
                "expected": "number"
            },
            "errors": "",
            "position": {
                "line": 38,
                "char": 13
            }
        },
        {
            "type": {
                "actual": "string"
            },
            "errors": "",
            "position": {
                "line": 46,
                "char": 13
            }
        },
        {
            "type": {
                "actual": "() => never"
            },
            "errors": "",
            "position": {
                "line": 55,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "() => void"
            },
            "errors": "",
            "position": {
                "line": 58,
                "char": 15
            }
        },
        {
            "type": {
                "actual": "string"
            },
            "errors": "",
            "position": {
                "line": 64,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "(input: string) => never"
            },
            "errors": "",
            "position": {
                "line": 70,
                "char": 13
            }
        },
        {
            "type": {
                "actual": "any"
            },
            "errors": "Property 'nonexistent' does not exist on type 'number'.",
            "position": {
                "line": 81,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 84,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "() => void"
            },
            "errors": "Expected 1 arguments, but got 2.",
            "position": {
                "line": 86,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 92,
                "char": 15
            }
        },
        {
            "type": {
                "actual": "() => void"
            },
            "errors": "Argument of type '\"this is a type error\"' is not assignable to parameter of type 'false'.",
            "position": {
                "line": 99,
                "char": 13
            }
        },
        {
            "type": {
                "actual": "() => void"
            },
            "errors": "Argument of type 'false | {}' is not assignable to parameter of type 'false'.Type '{}' is not assignable to type 'false'.",
            "position": {
                "line": 110,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }",
                "expected": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 115,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "() => never"
            },
            "errors": "Expected 0 arguments, but got 1.",
            "position": {
                "line": 117,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "number"
            },
            "errors": "",
            "position": {
                "line": 124,
                "char": 13
            }
        },
        {
            "type": {
                "actual": "number"
            },
            "errors": "",
            "position": {
                "line": 130,
                "char": 24
            }
        },
        {
            "type": {
                "actual": "void",
                "expected": "() => null"
            },
            "errors": "",
            "position": {
                "line": 132,
                "char": 15
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 138,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 139,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 142,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 145,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "any",
                "expected": "any"
            },
            "errors": "",
            "position": {
                "line": 148,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "any",
                "expected": "any"
            },
            "errors": "",
            "position": {
                "line": 149,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "number",
                "expected": "any"
            },
            "errors": "",
            "position": {
                "line": 150,
                "char": 24
            }
        },
        {
            "type": {
                "actual": "unknown",
                "expected": "any"
            },
            "errors": "",
            "position": {
                "line": 151,
                "char": 24
            }
        },
        {
            "type": {
                "actual": "{ re: string; }",
                "expected": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 155,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "{ re: string; }",
                "expected": "{ re: any; }"
            },
            "errors": "",
            "position": {
                "line": 157,
                "char": 15
            }
        },
        {
            "type": {
                "actual": "{ re: string; }",
                "expected": "{ re: string; }"
            },
            "errors": "",
            "position": {
                "line": 162,
                "char": 15
            }
        },
        {
            "type": {
                "actual": "\"ooo\"",
                "expected": "\"ooo\""
            },
            "errors": "",
            "position": {
                "line": 168,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "string",
                "expected": "\"whoop\""
            },
            "errors": "",
            "position": {
                "line": 172,
                "char": 13
            }
        },
        {
            "type": {
                "actual": "string",
                "expected": "unknown"
            },
            "errors": "",
            "position": {
                "line": 181,
                "char": 13
            }
        },
        {
            "type": {
                "actual": "() => void"
            },
            "errors": "Argument of type 'true' is not assignable to parameter of type 'false'.",
            "position": {
                "line": 190,
                "char": 5
            }
        },
        {
            "type": {
                "actual": "() => void"
            },
            "errors": "Argument of type 'null' is not assignable to parameter of type 'false'.",
            "position": {
                "line": 197,
                "char": 13
            }
        },
        {
            "type": {
                "actual": "() => void"
            },
            "errors": "",
            "position": {
                "line": 206,
                "char": 13
            }
        }
    ]
}
