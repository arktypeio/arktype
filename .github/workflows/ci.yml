name: Redo CI

on:
    pull_request:
        branches: [master]
    workflow_dispatch:

defaults:
    run:
        shell: bash

jobs:
    build:
        strategy:
            matrix:
                node-version: [16.6.1]
                os: [ubuntu-latest, windows-latest, macOS-latest, macos-11]
            fail-fast: false
        runs-on: ${{ matrix.os }}
        env:
            NODE_OPTIONS: "--unhandled-rejections=strict"
            DISPLAY: ":99"
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  token: ${{ secrets.PUSH_TOKEN }}
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: "https://registry.npmjs.org"
            - run: node common/scripts/install-run-rush.js change -v
            - name: Bump package versions
              if: ${{ github.event_name == 'workflow_dispatch' }}
              run: node common/scripts/install-run-rush.js publish --apply
            - run: node common/scripts/install-run-rush.js install
            - run: node common/scripts/install-run-rush.js build
            - name: Bump unpublished versions
              if: ${{ github.event_name == 'workflow_dispatch' }}
              working-directory: pkgs/test
              run: npm run syncVersions
            - run: npx playwright install-deps
            - name: Setup display server for linux
              if: ${{ matrix.os == 'ubuntu-latest' }}
              run: |
                  sudo apt-get install xvfb
                  Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
            - run: node common/scripts/install-run-rush.js test
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Set app release version
              if: ${{ github.event_name == 'workflow_dispatch' }}
              working-directory: pkgs/app
              run: echo APP_RELEASE_VERSION=$(echo$(npm run version) | awk '{print $NF}') >> $GITHUB_ENV
            - name: Create and test electron release for ${{ matrix.os }}
              working-directory: pkgs/app
              run: |
                  npm run release
                  npm run testRelease
            - name: Create github app release for pull request
              if: ${{ github.event_name == 'pull_request' }}
              uses: ncipollo/release-action@v1
              with:
                  allowUpdates: true
                  draft: true
                  artifacts: "pkgs/app/release/*.zip"
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ github.head_ref }}
                  commit: ${{ github.head_ref }}
            - name: Create package artifacts
              if: ${{ github.event_name == 'workflow_dispatch' && matrix.os == 'ubuntu-latest' && matrix.node-version == '16.6.1' }}
              run: node common/scripts/install-run-rush.js publish --publish --pack --include-all --release-folder release
            - name: Create/update github release
              if: ${{ github.event_name == 'workflow_dispatch' }}
              uses: ncipollo/release-action@v1
              with:
                  allowUpdates: true
                  artifacts: "pkgs/app/release/*.zip,release/*"
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ format('v{0}', env.APP_RELEASE_VERSION) }}
                  commit: ${{ github.ref }}
            - name: Publish packages to NPM and push version updates to master
              if: ${{ github.event_name == 'workflow_dispatch' && matrix.os == 'ubuntu-latest' && matrix.node-version == '16.6.1' }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
              run: |
                  git config --global user.email "ci@redo.qa"
                  git config --global user.name "Github Actions"
                  node common/scripts/install-run-rush.js publish --publish --include-all --target-branch master
                  git commit -a -m "Bump versions."
                  git push
